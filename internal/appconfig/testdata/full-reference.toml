app = "foo"
kill_signal = "SIGTERM"
kill_timeout = 3
primary_region = "sea"

[experimental]
  cmd = ["cmd"]
  entrypoint = ["entrypoint"]
  exec = ["exec"]
  auto_rollback = true
  enable_consul = true
  enable_etcd = true

[processes]
  app = "echo app"
  web = "echo web"
  some_job = "echo some job"

[build]
  builder = "dockerfile"
  image = "foo/fighter"
  builtin = "whatisthis"
  dockerfile = "Dockerfile"
  ignorefile = ".gitignore"
  build-target = "target"
  #docker_build_target = "target"
  buildpacks = ["packme", "well"]

  [build.settings]
    foo = "bar"
    other = 2

  [build.args]
    param1 = "value1"
    param2 = "value2"

[deploy]
  release_command = "release command"
  strategy = "rolling-eyes"

[env]
  FOO = "BAR"

[metrics]
  port = 9999
  path = "/metrics"

[http_service]
  internal_port = 8080
  force_https = true

  [http_service.concurrency]
    type = "donuts"
    hard_limit = 10
    soft_limit = 4

[[statics]]
  guest_path = "/path/to/statics"
  url_prefix = "/static-assets"

[[mounts]]
  source = "data"
  destination = "/data"
  processes = ["app", "web"]

[[mounts]]
  source = "data-job"
  destination = "/jobdata"
  processes = ["some_job"]

[processes]
  web = "run web"
  task = "task all day"

[checks.status]
  port = 2020
  type = "http"
  interval = "10s"
  timeout = "2s"
  grace_period = "27s"
  method = "GET"
  path = "/status"
  protocol = "https"
  tls_skip_verify = true
  [checks.status.headers]
    Content-Type = "application/json"
    Authorization = "super-duper-secret"

[[services]]
  internal_port = 8081
  protocol = "tcp"
  processes = ["app"]

  [services.concurrency]
    type = "requests"
    hard_limit = 22
    soft_limit = 13

  [[services.ports]]
    port = 80
    start_port = 100
    end_port = 200
    handlers = ["https"]
    force_https = true

  [[services.tcp_checks]]
    interval = "21s"
    timeout = "4s"
    grace_period = "1s"
    restart_limit = 3

  [[services.http_checks]]
    interval = "1m21s"
    timeout = "7s"
    grace_period = "2s"
    restart_limit = 4
    method = "GET"
    path = "/"
    protocol = "https"
    tls_skip_verify = true
    [services.http_checks.headers]
      My-Custom-Header = "whatever"

  # Add an extra check to be sure first do not override second or the otherway
  [[services.http_checks]]
    interval = "33s"
    timeout = "10s"
    method = "POST"
    path = "/check2"
